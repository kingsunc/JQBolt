[2]
case=case $: $\n$
def=#define $\n$
default=default $: $\n$
dowhile=do\n{\n	$\n}\nwhile ($);\n$
dowhiles=do\n	$\nwhile ($);\n$
else=else\n{\n	$\n}\n$
elseif=else if ($)\n{\n	$\n}\n$
elseifs=else if ($)\n	$\n$
elses=else\n	$\n$
for=for ($;$;$)\n{\n	$\n}\n$
fors=for ($;$;$)\n	$\n$
func=$ $($)\n{\n	$\n	return $;\n}\n$
if=if ($)\n{\n	$\n}\n$
ifelse=if ($)\n{\n	$\n}\nelse\n{\n	$\n}\n$
ifelses=if ($)\n{\n	$\n}\nelse\n	$\n$
ifs=if ($)\n	$\n$
ifselse=if ($)\n	$\nelse\n{\n	$\n}\n$
ifselses=if ($)\n	$\nelse\n	$\n$
inc=#include <$>\n$
incl=#include "$"\n$
main=int main(int argc, char* argv[])\n{\n	$\n}\n
switch=switch ($)\n{\n	$\n}\n$
while=while ($)\n{\n	$\n}\n$
whiles=while ($)\n	$\n$
[20]
b=border:1px solid #$;
bb=border-bottom:1px solid #$;
bds=border:1px dashed #$;
bdt=border:1px dotted #$;
bi=background:url(../images/$.gif) no-repeat;
bix=background:url(../images/$.gif) repeat-x;
biy=background:url(../images/$.gif) repeat-x;
bk=background:#$;
bl=border-left:1px solid #$;
bp=background-position:$;
br=border-right:1px solid #$;
bt=border-top:1px solid #$;
bw=border-width:$px;
c=color:#$;
cl=clear:$;
cm=/*$*/
cur=cursor:pointer;
d=display:block;
di=display:inline;
ff=font-family:$;
fl=float:left;
fr=float:right;
fs=font-style:normal;
fsz=font-size:$px;
fw=font-weight:bold;
fwn=font-weight:normal;
h=height:$px;
i=!important;
lh=line-height:$px;
ls=list-style:normal;
m=margin:$;
mb=margin-bottom:$px;
ml=margin-left:$px;
mr=margin-right:$px;
mt=margin-top:$px;
ov=overflow:hidden;
p=padding:$px;
pb=padding-bottom:$px;
pl=padding-left:$px;
pr=padding-right:$px;
psa=position:absolute;
psr=position:relative;
pt=padding-top:$px;
ta=text-align:center;
tar=text-align:right;
td=text-decoration:underline;
tdn=text-decoration:none;
ti=text-indent:$px;
vb=visibility:hidden;
w=width:$px;
[23]
jq=jqbolt("#", self)
absposchange=jqbolt("#", self).onabsposchange(function (self)\n\nend);
bind=jqbolt("#", self).onbind(function (self)\n\nend);
capturechange=jqbolt("#", self).oncapturechange(function (self)\n\nend);
char=jqbolt("#", self).onchar(function (self)\n\nend);
controlfocuschange=jqbolt("#", self).oncontrolfocuschange(function (self)\n\nend);
controlmouseenter=jqbolt("#", self).oncontrolmouseenter(function (self)\n\nend);
controlmouseleave=jqbolt("#", self).oncontrolmouseleave(function (self)\n\nend);
controlmousewheel=jqbolt("#", self).oncontrolmousewheel(function (self)\n\nend);
destroy=jqbolt("#", self).ondestroy(function (self)\n\nend);
dragenter=jqbolt("#", self).ondragenter(function (self)\n\nend);
dragleave=jqbolt("#", self).ondragleave(function (self)\n\nend);
dragover=jqbolt("#", self).ondragover(function (self)\n\nend);
dragquery=jqbolt("#", self).ondragquery(function (self)\n\nend);
drop=jqbolt("#", self).ondrop(function (self)\n\nend);
enablechange=jqbolt("#", self).onenablechange(function (self)\n\nend);
hittest=jqbolt("#", self).onhittest(function (self)\n\nend);
hotkey=jqbolt("#", self).onhotkey(function (self)\n\nend);
initcontrol=jqbolt("#", self).oninitcontrol(function (self)\n\nend);
keydown=jqbolt("#", self).onkeydown(function (self)\n\nend);
keyup=jqbolt("#", self).onkeyup(function (self)\n\nend);
lbuttondbclick=jqbolt("#", self).onlbuttondbclick(function (self)\n\nend);
lbuttondown=jqbolt("#", self).onlbuttondown(function (self)\n\nend);
lbuttonup=jqbolt("#", self).onlbuttonup(function (self)\n\nend);
mbuttondbclick=jqbolt("#", self).onmbuttondbclick(function (self)\n\nend);
mbuttondown=jqbolt("#", self).onmbuttondown(function (self)\n\nend);
mbuttonup=jqbolt("#", self).onmbuttonup(function (self)\n\nend);
mouseenter=jqbolt("#", self).onmouseenter(function (self)\n\nend);
mousehover=jqbolt("#", self).onmousehover(function (self)\n\nend);
mouseleave=jqbolt("#", self).onmouseleave(function (self)\n\nend);
mousemove=jqbolt("#", self).onmousemove(function (self)\n\nend);
mousewheel=jqbolt("#", self).onmousewheel(function (self)\n\nend);
poschange=jqbolt("#", self).onposchange(function (self)\n\nend);
rbuttondbclick=jqbolt("#", self).onrbuttondbclick(function (self)\n\nend);
rbuttondown=jqbolt("#", self).onrbuttondown(function (self)\n\nend);
rbuttonup=jqbolt("#", self).onrbuttonup(function (self)\n\nend);
tabbed=jqbolt("#", self).ontabbed(function (self)\n\nend);
visiblechange=jqbolt("#", self).onvisiblechange(function (self)\n\nend);
hover=jqbolt("#", self).hover(function (self)\n\nend, function (self)\n\nend);
[29]
else=} else {\n $
foreach=foreach $ $ {\n $\n}\n$
if=if { $ } {\n $\n}\n$
ifelse=if { $ }\n $\n} else {\n $\n}
proc=# $\nproc $ { $ } {\n $\n}\n$
regsub=regsub -all {$} "$" {$} $\n$
[3]
case=case $: $\n$
class=class $ {\nprivate:\n	$\nprotected:\n	$\npublic:\n	$\n};\n$
def=#define $\n$
default=default $: $\n$
dowhile=do\n{\n	$\n}\nwhile ($);\n$
dowhiles=do\n	$\nwhile ($);\n$
else=else\n{\n	$\n}\n$
elseif=else if ($)\n{\n	$\n}\n$
elseifs=else if ($)\n	$\n$
elses=else\n	$\n$
for=for ($;$;$)\n{\n	$\n}\n$
fors=for ($;$;$)\n	$\n$
func=$ $($)\n{\n	$\n	return $;\n}\n$
hclass=#ifndef $\n#define $\n\nclass $ {\nprivate:\n	$\nprotected:\n	$\npublic:\n	$\n};\n\n#endif\n$
if=if ($)\n{\n	$\n}\n$
ifelse=if ($)\n{\n	$\n}\nelse\n{\n	$\n}\n$
ifelses=if ($)\n{\n	$\n}\nelse\n	$\n$
ifs=if ($)\n	$\n$
ifselse=if ($)\n	$\nelse\n{\n	$\n}\n$
ifselses=if ($)\n	$\nelse\n	$\n$
inc=#include <$>\n$
incl=#include "$"\n$
main=int main(int argc, char* argv[])\n{\n	$\n}\n
switch=switch ($)\n{\n	$\n}\n$
while=while ($)\n{\n	$\n}\n$
whiles=while ($)\n	$\n$
[38]
Ris=Rising_Edge ( $ )$
access=type $ is access $;\n$
alias=alias $ is $;\n$
archi=architecture $ of $ is\n$\nbegin\n$\nend $;\n$
array=type $ is\n array ( $ ) of $;\n$
assert=assert ( $ )\n report "$"\n sevrity $;\n$
block=$ : block $\nbegin\n $\nend block $;\n$
case=case $ is\n when $ =>\n $;\n when others =>\n $;\nend case;\n$
com=--\n-- $\n--
component=component $\n port (\n $\n );\nend component $;\n$
config=for $ : $\n use $\n $;\n$
constant=constant $: $;\n$
elsif=elsif ( $ ) then\n $;
entity=entity $ is\n port (\n $\n );\nend $;\n$
enum=type $ is ( $, $ );
exit=exit $ when $;\n$
file=file $ : $ is $;\n$
for=$ : for $ in $ downto $ loop\n $;\nend loop $;\n$
function=function (\n $\n )return $ is\n $\nbegin\n $\nend $;
functiond=function $ (\n $\n) return $;\n$
geneif=$ : if ( $ = $ ) generate\n $\nbegin\n $\nend generate $;
generate=$ : for $ in $ downto $ generate\n $\nbegin\n $\nend generate $;\n$
generic=generic (\n $\n );\n$
genmap=generic map (\n $\n)\n$
group=group $ is ( $ );\n$
ieee=library ieee;\n use ieee.std_logic_1164.all;\n $
if=if ( $ ) then\n $;\n$end if;\n$
ifelse=if ( $ ) then\n $\nelse\n $\nend if;\n$
ifelsif=if ( $ ) then\n $\nelsif ( $ )\n $\nend if;\n$
loop=$ : loop\n $\nend loop;\n$
map=$ : $\n port map (\n $\n );\n$
mapgen=$ : $\n generic map (\n $\n )\n port map (\n $\n );\n$
next=$ : next $ when $;\n$
numeric=use ieee.numeric_std.all;\n$
pack=package $ is\n $\nend package $;\n\npackage body $ is\n $\nend package body $;\n$
port=port (\n $\n );\n$
procedure=procedure $ (\n $\n ) is\n$\nbegin\n $\nend procedure $;\n$
procedured=procedure $ (\n $\n);\n$
process=$ : process ( $ )\nbegin\n $\nend process $;\n$
proclk=$ : process ( $, $ )\n begin\n if ( $ = '$' ) then\n $ <= $;\n elsif( Rising_Edge( $ ) ) then\n $\n end if;\nend process $;
protected=protected\n $\nend protected ;
record=type $ is\n record\n $ : $ ;\nend record $;\n$
start=library ieee;\n use ieee.std_logic_1164.all;\n\nentity $ is\n port (\n $\n );\nend $;\n\narchitecture $ of $ is\n$\nbegin\n$\nend $;\n$
std=signal $ : std_logic$;\n$
stdpi=$ : in std_logic;\n$
stdpio=$ : inout std_logic;\n$
stdpo=$ : out std_logic;\n$
stdtextio=use ieee.std_logic_textio.all;\n$
stdv=signal $ : std_logic_vector( $ downto 0);\n$
stdvar=variable $ : std_logic;\n$
stdvpi=$ : in std_logic_vector( $ downto $);\n$
stdvpio=$ : inout std_logic_vector( $ downto $);\n$
stdvpo=$ : out std_logic_vector( $ downto $);\n$
stdvvar=variable $ : std_logic_vector( $ downto 0);\n$
subtype=subtype $ is $;\n$
textio=use std.textio.all;\n$
units=units\n $;\nend units;\n$
waitf=wait for $;\n$
waitu=wait until $;\n$
waituf=wait until $ for $;\n$
when=when $ =>\n $;$
whene=when ( $ ) else $;
while=$ : while $ loop\n $;\nend loop;\n$
x=x"$"$
[8]
a=<a href="#">$</a>
at=<a href="#" target="_blank">$</a>
b=<!--{begin $-->
bd=<body>\n	$\n</body>
dd=<dd>$</dd>
div=<div class="$">$</div>
divid=<div id="$">$</div>
dl=<dl>\n	<dt>$</dt>\n	<dd>$</dd>\n</dl>
dt=<dt>$</dt>
dtd=<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">\n<html xmlns="http://www.w3.org/1999/xhtml">\n<head>\n	<title>$</title>\n	<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />\n	<meta http-equiv="Content-Language" content="zh-CN" />\n	<meta name="Keywords" content="" />\n	<meta name="Description" content="" />\n	<link rel="stylesheet" href="style/$.css" type="text/css" />\n</head>\n<body>\n</body>\n</html>
e=<!--}end $-->
em=<em>$</em>
fm=<form action="$">\n	$\n</form>
h1=<h1>$</h1>
h2=<h2>$</h2>
h3=<h3>$</h3>
h4=<h4>$</h4>
h5=<h5>$</h5>
h6=<h6>$</h6>
hd=<head>\n	<title>$</title>\n	<meta http-equiv="Content-Type" content="text/html; charset=gbk" />\n	<meta http-equiv="Content-Language" content="zh-CN" />\n	<meta name="Keywords" content="" />\n	<meta name="Description" content="" />\n	<link rel="stylesheet" rev="stylesheet" href="style/$.css" type="text/css" />\n	<script type="text/javascript" src="script/$.js"></script>\n</head>
img=<img src="images/$.gif" alt="$" />
in=<input type="$" value="$" />
lb=<label>$</label>
li=<li>$</li>
link=<link rel="stylesheet" rev="stylesheet" href="style/$.css" type="text/css" />
ol=<ol>\n	<li>$</li>\n	$\n</ol>
op=<option>$</option>
p=<p>$</p>
pre=<pre>$</pre>
sc=<script type="text/javascript" src="script/$.js"></script>
scr=<script type="text/javascript">\n<!--\n$\n//-->\n</script>
sl=<select>\n	<option>$</option>\n</select>
sp=<span>$</span>
st=<strong>$</strong>
style=<style type="text/css">\n<!--\n$\n-->\n</style>
tb=<table>\n	<tr>\n		<td>$</td>\n		$\n	</tr>\n	$\n</table>
td=<td>$</td>
tmp=<img src="temp/$.gif" alt="" />
tr=<tr>\n	$\n</tr>
tt=<title>$</title>
txt=<textarea>$</textarea>
ul=<ul>\n	<li>$</li>\n	$\n</ul>
[9]
blur=<obj class="BlurObject">\n	<attr>\n		<left></left>\n		<top></top>\n		<width></width>\n		<height></height>\n	</attr>\n</obj>
caption=<obj class="CaptionObject">\n	<attr>\n		<left></left>\n		<top></top>\n		<width></width>\n		<height></height>\n	</attr>\n</obj>
children=<children>\n\n</children>
edit=<obj class="EditObject">\n	<attr>\n		<left></left>\n		<top></top>\n		<width></width>\n		<height></height>\n	</attr>\n</obj>
eventlist=<eventlist>\n\n</eventlist>
file=<obj class="FillObject">\n	<attr>\n		<left></left>\n		<top></top>\n		<width></width>\n		<height></height>\n	</attr>\n</obj>
flash=<obj class="FlashObject">\n	<attr>\n		<left></left>\n		<top></top>\n		<width></width>\n		<height></height>\n	</attr>\n</obj>
image=<obj class="ImageObject">\n	<attr>\n		<left></left>\n		<top></top>\n		<width></width>\n		<height></height>\n	</attr>\n</obj>
layout=<obj class="LayoutObject">\n	<attr>\n		<left></left>\n		<top></top>\n		<width></width>\n		<height></height>\n	</attr>\n</obj>
line=<obj class="LineObject">\n	<attr>\n		<left></left>\n		<top></top>\n		<width></width>\n		<height></height>\n	</attr>\n</obj>
mask=<obj class="MaskObject">\n	<attr>\n		<left></left>\n		<top></top>\n		<width></width>\n		<height></height>\n	</attr>\n</obj>
nc=<obj class="NcObject">\n	<attr>\n		<left></left>\n		<top></top>\n		<width></width>\n		<height></height>\n	</attr>\n</obj>
real=<obj class="RealObject">\n	<attr>\n		<left></left>\n		<top></top>\n		<width></width>\n		<height></height>\n	</attr>\n</obj>
rectang=<obj class="RectangObject">\n	<attr>\n		<left></left>\n		<top></top>\n		<width></width>\n		<height></height>\n	</attr>\n</obj>
resize=<obj class="ResizeObject">\n	<attr>\n		<left></left>\n		<top></top>\n		<width></width>\n		<height></height>\n	</attr>\n</obj>
rich=<obj class="RichObject">\n	<attr>\n		<left></left>\n		<top></top>\n		<width></width>\n		<height></height>\n	</attr>\n</obj>
seq=<obj class="SeqImageObject">\n	<attr>\n		<left></left>\n		<top></top>\n		<width></width>\n		<height></height>\n	</attr>\n</obj>
text=<obj class="TextObject">\n	<attr>\n		<left></left>\n		<top></top>\n		<width></width>\n		<height></height>\n	</attr>\n</obj>
texture=<obj class="TextureObject">\n	<attr>\n		<left></left>\n		<top></top>\n		<width></width>\n		<height></height>\n	</attr>\n</obj>
web=<obj class="WebBrowseObject">\n	<attr>\n		<left></left>\n		<top></top>\n		<width></width>\n		<height></height>\n	</attr>\n</obj>
window=<obj class="WindowlessFlashObject">\n	<attr>\n		<left></left>\n		<top></top>\n		<width></width>\n		<height></height>\n	</attr>\n</obj>
